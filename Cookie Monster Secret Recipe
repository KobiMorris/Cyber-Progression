This is notes and steps taken to attempt/complete the 'Cookie Monster Secret Recipe' challenge on play.picoctf.org

Given how the names so far have been clues, this will most likely relate to cookies.

Clicked on the website, presented with login. Attempted fake login to see what happens, presented with page telling to go back and look at cookies.

Opened 'Inspect' (Mozilla) and went to Storage -> Cookies -> URL -> Contained the name (sercret_recipe) and value (cGljb0NURntjMDBrMWVfbTBuc3Rlcl9sMHZlc19jMDBraWVzX0M0MzBBRTIwfQ%3D%3D).

Unsure what to do, I kept looking and checked the network which containted 2 ports that also contained the same cookie however without the '%3D%' and instead with '=' cGljb0NURntjMDBrMWVfbTBuc3Rlcl9sMHZlc19jMDBraWVzX0M0MzBBRTIwfQ==

Looked it up and '=' equals '%3D' as the later is used for URL-Encoding. 

After doing 'research', the cookie is an enconded base64, with the biggest giveaway being the two '==' signs at the end. 

To proceed we use the Linux terminal with the following command to decode it 'echo "ENCODED_BASE_64" | base64 --decode


echo "cGljb0NURntjMDBrMWVfbTBuc3Rlcl9sMHZlc19jMDBraWVzX0M0MzBBRTIwfQ==" | base64 --decode

This presents us with what is the obj -> picoCTF{c00k1e_m0nster_l0ves_c00kies_C430AE20}


------------
How Did I find out about the base64 encoded? 

I Cheated...... I was lost, and visited a website and scrolled down to where I was upto, trying to get help on the next step ["https://medium.com/@Kamal_S/picoctf-web-exploitation-cookie-monster-secret-recipe-4c1776da9251"],
however that next step just so happened to be the last. Oh, well. I learned along the way which is good :)


------------

Mistakes Made

Looked up 'Cookie exploits' and attempted to find what was most appropriate. Landed on https://portswigger.net/research/stealing-httponly-cookies-with-the-cookie-sandwich-technique which seemed most likely given the scenario,
however due to my lack of knowledge of cookies, I was unaware that I actually had what I needed, and just needed to decode it. 
What I stumbled upon was instead a way to intercept cookies within the webpage.

I then later stumbled upon XSS (Cross-site scripting) which also seemed viable, especially the Reflected scripting, but after further research it was not viable due to its exploit method which the current page did not have.


------------
How to prevent the mistakes in the future

1. Learn the What, When, Where, Who, Why, and How of whatever the objective is looking for.
Such as for this, I would have learned more about Cookies as opposed to jumping into it and finding exploits for cookies. If I had prior cookie knowledge, the aformentioned mistakes most likely would have been avoided.
